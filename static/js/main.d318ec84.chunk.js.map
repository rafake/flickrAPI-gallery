{"version":3,"sources":["images/blue-sky-clear-sky-cold-346529.jpg","images/adventure-daylight-glacier-301391.jpg","images/daylight-environment-forest-459225.jpg","images/flickr.svg","logo.svg","components/picture.js","components/modalPicture.js","components/gallery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Picture","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","openImage","info","farm","server","id","secret","react_default","a","createElement","className","onClick","src","concat","alt","React","Component","ModalPicture","path","author","onClickClose","Gallery","imgInfo","console","log","urlInfo","fetch","then","r","json","resp","setState","isOpen","photo","owner","username","description","_content","handleLoadMore","counter","state","pageNo","url","hasUpdated","currentTag","type","photosOnLoad","photos","newPhotosState","hoverEffectFunction","hoverEffect","parent","document","querySelector","intensity","image1","image3","image2","displacementImage","speedIn","value","tag","handleChange","bind","assertThisInitialized","handleSubmit","_this2","nextProps","nextState","nextContext","_this3","event","target","_this4","preventDefault","setTimeout","_this5","images","map","el","i","picture","key","Fragment","href","flickrIcon","onSubmit","onChange","modalPicture","App","thingSearch","gallery","Boolean","window","location","hostname","match","addEventListener","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4GCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8LCiCzBC,cA9BX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAGVQ,YAAc,WACV,GAAkC,mBAAxBP,EAAKD,MAAMS,UAAyB,CAC1C,IAAMC,EAAO,CACTC,KAAMV,EAAKD,MAAMW,KACjBC,OAAQX,EAAKD,MAAMY,OACnBC,GAAIZ,EAAKD,MAAMa,GACfC,OAAQb,EAAKD,MAAMc,QAEvBb,EAAKD,MAAMS,UAAUC,KAZVT,wEAiBf,OACIc,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACVC,QAASf,KAAKI,aACdO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKG,IAAG,eAAAC,OAAiBjB,KAAKJ,MAAMW,KAA5B,sBAAAU,OAAqDjB,KAAKJ,MAAMY,OAAhE,KAAAS,OAA0EjB,KAAKJ,MAAMa,GAArF,KAAAQ,OAA2FjB,KAAKJ,MAAMc,OAAtG,QAAoHQ,IAAI,cAtB9HC,IAAMC,WCcbC,mLAXP,OAAOV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKG,IAAKhB,KAAKJ,MAAM0B,KAAMJ,IAAI,KAC/BP,EAAAC,EAAAC,cAAA,qBAAab,KAAKJ,MAAM2B,SAG5BZ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAA2BC,QAASf,KAAKJ,MAAM4B,cAAjE,iBAReL,IAAMC,uFCgMlBK,cAzLX,SAAAA,EAAY7B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,IACf5B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2B,GAAAtB,KAAAH,KAAMJ,KAiBVS,UAAY,SAACqB,GACTC,QAAQC,IAAIF,GACZ,IAAMG,EAAO,wHAAAZ,OAA2HS,EAAQjB,GAAnI,iCACbqB,MAAMD,GAASE,KAAK,SAAAC,GAAC,OAAEA,EAAEC,SAAQF,KAAK,SAAAG,GAClCP,QAAQC,IAAIF,EAAQjB,IACpBkB,QAAQC,IAAIM,GACZrC,EAAKsC,SAAS,CAACC,QAAQ,EACvBb,OAAQW,EAAKG,MAAMC,MAAMC,SACzBC,YAAaN,EAAKG,MAAMG,YAAYC,SACpCnB,KAAI,eAAAL,OAAiBS,EAAQnB,KAAzB,sBAAAU,OAAkDS,EAAQlB,OAA1D,KAAAS,OAAoES,EAAQjB,GAA5E,KAAAQ,OAAkFS,EAAQhB,OAA1F,eA3BOb,EAiCnB2B,aAAe,WACX3B,EAAKsC,SAAS,CAACC,QAAQ,KAlCRvC,EA2DnB6C,eAAiB,WAEb,IAAIC,EAAU9C,EAAK+C,MAAMC,OACzBF,IACA9C,EAAKsC,SAAS,CAACU,OAAQF,IACvBhB,QAAQC,IAAI/B,EAAK+C,MAAMC,QACvB,IAAIC,EAAM,GAENA,EADyB,GAAzBjD,EAAK+C,MAAMG,WACR,mHAAA9B,OAAsHpB,EAAK+C,MAAMI,WAAjI,+DAAA/B,OAAyMpB,EAAK+C,MAAMC,OAApN,iCAEA,mHAAA5B,OAAsHpB,EAAKD,MAAMqD,KAAjI,+DAAAhC,OAAmMpB,EAAK+C,MAAMC,OAA9M,iCAEJf,MAAMgB,GAAKf,KAAK,SAAAC,GAAC,OAAEA,EAAEC,SAAQF,KAAK,SAAAG,GACjCP,QAAQC,IAAIkB,GACZ,IAAII,EAAehB,EAAKiB,OAAOd,MAE3Be,EADyBvD,EAAK+C,MAAMO,OACIlC,OAAOiC,GACnDvB,QAAQC,IAAIwB,GACZvD,EAAKsC,SAAS,CAACgB,OAAQC,OA7EZvD,EAiFnBwD,oBAAsB,WACA,IAAIC,IAAY,CAC9BC,OAAQC,SAASC,cAAc,WAC/BC,UAAW,GACXC,OAAQC,IAERC,OAAQA,IAERC,kBAAmBH,IAInBI,QAAS,KA3FblE,EAAK+C,MAAQ,CACTO,OAAQ,GACR5B,OAAQ,GACRiB,YAAa,GACbJ,QAAQ,EACRS,OAAQ,EACRmB,MAAO,GACPC,IAAK,KACLjB,WAAY,GACZD,YAAY,GAGhBlD,EAAKqE,aAAerE,EAAKqE,aAAaC,KAAlBrE,OAAAsE,EAAA,EAAAtE,CAAAD,IACpBA,EAAKwE,aAAexE,EAAKwE,aAAaF,KAAlBrE,OAAAsE,EAAA,EAAAtE,CAAAD,IAfLA,mFAqCC,IAAAyE,EAAAtE,KACV8C,EAAG,mHAAA7B,OAAsHjB,KAAKJ,MAAMqD,KAAjI,sFACTnB,MAAMgB,GAAKf,KAAK,SAAAC,GAAC,OAAEA,EAAEC,SAAQF,KAAK,SAAAG,GAAI,OAAGoC,EAAKnC,SAAS,CAACgB,OAAQjB,EAAKiB,OAAOd,UAC5ErC,KAAKqD,kEAIWkB,EAAWC,EAAWC,GAAa,IAAAC,EAAA1E,KACnD,GAAqB,MAAfwE,EAAUP,IAAY,CACxBtC,QAAQC,IAAI4C,GACZ,IAAM1B,EAAG,mHAAA7B,OAAsHuD,EAAUP,IAAhI,sFACTnC,MAAMgB,GAAKf,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SAAQF,KAAK,SAAAG,GAAI,OAAIwC,EAAKvC,SAAS,CAACgB,OAAQjB,EAAKiB,OAAOd,UAE/EV,QAAQC,IAAIkB,GACZ9C,KAAKmC,SAAS,CAAC8B,IAAK,OACpBjE,KAAKmC,SAAS,CAACY,YAAY,IAC3B/C,KAAKmC,SAAS,CAACU,OAAQ,0CA8ClB8B,GACT3E,KAAKmC,SAAS,CAAC6B,MAAOW,EAAMC,OAAOZ,6CAG1BW,GAAO,IAAAE,EAAA7E,KAChB2E,EAAMG,iBACN9E,KAAKmC,SAAS,CAAC8B,IAAKjE,KAAK4C,MAAMoB,QAC/BhE,KAAKmC,SAAS,CAACa,WAAYhD,KAAK4C,MAAMoB,QAEtCe,WAAW,WACPpD,QAAQC,IAAIiD,EAAKjC,MAAMqB,MACzB,sCAOG,IAAAe,EAAAhF,KACCiF,EAASjF,KAAK4C,MAAMO,OAAO+B,IAAK,SAACC,EAAGC,GACtC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,CAASC,IAAKF,EACL7E,KAAM4E,EAAG5E,KACTC,OAAQ2E,EAAG3E,OACXC,GAAI0E,EAAG1E,GACPC,OAAQyE,EAAGzE,OACXL,UAAW2E,EAAK3E,cAEpC,OAAQM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KAEJ5E,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,kCACyBF,EAAAC,EAAAC,cAAA,KAAG2E,KAAK,uCAAuCZ,OAAO,SAAS9D,UAAU,qCAAoCH,EAAAC,EAAAC,cAAA,wBAClIF,EAAAC,EAAAC,cAAA,OAAKG,IAAKyE,IAAY3E,UAAU,eAGpCH,EAAAC,EAAAC,cAAA,KAAG2E,KAAK,4BAA4BZ,OAAO,SAAS9D,UAAU,gBAA9D,SAAmFH,EAAAC,EAAAC,cAAA,iCAI/FF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAKvBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEhBH,EAAAC,EAAAC,cAAA,WAASC,UAAU,yBAGfH,EAAAC,EAAAC,cAAA,QAAM6E,SAAU1F,KAAKqE,aAAcvD,UAAU,iBACzCH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,oBAEIH,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OAAOe,MAAOhE,KAAK4C,MAAMoB,MAAO2B,SAAU3F,KAAKkE,aAAcpD,UAAU,yBAEvFH,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,SAASe,MAAM,QAAQlD,UAAU,0BAKjDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEfH,EAAAC,EAAAC,cAAA,UACCoE,IAKGjF,KAAK4C,MAAMR,QAAUzB,EAAAC,EAAAC,cAAC+E,EAAD,CAAcrE,OAAQvB,KAAK4C,MAAMrB,OAAQD,KAAMtB,KAAK4C,MAAMtB,KAAMkB,YAAaxC,KAAK4C,MAAMJ,YAAahB,aAAcxB,KAAKwB,aAAcV,UAAU,qBAKzKH,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBC,QAASf,KAAK0C,gBAAnD,sBAjLEvB,IAAMC,WCiBbyE,cAlBb,SAAAA,EAAYjG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,IACjBhG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+F,GAAA1F,KAAAH,KAAMJ,KACDgD,MAAQ,CACXkD,YAAa,OAHEjG,wEAQjB,OACIc,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACA5E,EAAAC,EAAAC,cAACkF,EAAD,CAAS9C,KAAK,oBAXJ9B,IAAMC,WCKJ4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZN5C,SAAS6C,iBAAiB,mBAAoB,WAC1CC,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAAShD,SAASiD,eAAe,WD0H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7E,KAAK,SAAA8E,GACjCA,EAAaC","file":"static/js/main.d318ec84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue-sky-clear-sky-cold-346529.a0e64787.jpg\";","module.exports = __webpack_public_path__ + \"static/media/adventure-daylight-glacier-301391.3fe559ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/daylight-environment-forest-459225.6aef47be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flickr.f03cabed.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\"\r\n\r\nclass Picture extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = () => {\r\n        if(typeof this.props.openImage == \"function\") {\r\n            const info = {\r\n                farm: this.props.farm,\r\n                server: this.props.server,\r\n                id: this.props.id,\r\n                secret: this.props.secret\r\n            };\r\n            this.props.openImage(info)\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"picture-item\"\r\n                onClick={this.handleClick}>\r\n                <div className=\"img-container\">\r\n                    <img src={`https://farm${this.props.farm}.staticflickr.com/${this.props.server}/${this.props.id}_${this.props.secret}.jpg`} alt=\"\"/>\r\n\r\n                </div>\r\n                </li>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Picture;","import React from \"react\";\r\n\r\n\r\nclass ModalPicture extends React.Component {\r\n    render() {\r\n        return <div className=\"overlay-modal\">\r\n            <div className=\"overlay-modal-bg\">\r\n                <img src={this.props.path} alt=\"\"/>\r\n                <h2>Author: {this.props.author}</h2>\r\n                {/*<h2>Description: {this.props.description}</h2>*/}\r\n            </div>\r\n            <button className=\"closeButton reset-Button\" onClick={this.props.onClickClose}>Close</button>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default ModalPicture;","import React from \"react\";\r\nimport Picture from \"./picture\";\r\nimport ModalPicture from './modalPicture';\r\nimport hoverEffect from 'hover-effect';\r\nimport image1 from '../images/blue-sky-clear-sky-cold-346529.jpg'\r\nimport image2 from '../images/adventure-daylight-glacier-301391.jpg'\r\nimport image3 from '../images/daylight-environment-forest-459225.jpg'\r\nimport flickrIcon from '../images/flickr.svg'\r\n\r\nclass Gallery extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            photos: [],\r\n            author: \"\",\r\n            description: \"\",\r\n            isOpen: false,\r\n            pageNo: 2,\r\n            value: \"\",\r\n            tag: null,\r\n            currentTag: \"\",\r\n            hasUpdated: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    openImage = (imgInfo) => {\r\n        console.log(imgInfo);\r\n        const urlInfo = `https://api.flickr.com/services/rest/?method=flickr.photos.getInfo&api_key=67fa847a53bdc09b2db5c74c43d44b39&photo_id=${imgInfo.id}&format=json&nojsoncallback=1`\r\n        fetch(urlInfo).then(r=>r.json()).then(resp=> {\r\n            console.log(imgInfo.id);\r\n            console.log(resp);\r\n            this.setState({isOpen: true,\r\n            author: resp.photo.owner.username,\r\n            description: resp.photo.description._content,\r\n            path: `https://farm${imgInfo.farm}.staticflickr.com/${imgInfo.server}/${imgInfo.id}_${imgInfo.secret}_c.jpg`})\r\n\r\n        }\r\n        )\r\n    };\r\n\r\n    onClickClose = () => {\r\n        this.setState({isOpen: false})\r\n    };\r\n\r\n    componentDidMount() {\r\n        const url = `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=67fa847a53bdc09b2db5c74c43d44b39&tags=${this.props.type}&sort=interestingness-desc&content_type=1&per_page=20&format=json&nojsoncallback=1`\r\n        fetch(url).then(r=>r.json()).then(resp=> this.setState({photos: resp.photos.photo}));\r\n        this.hoverEffectFunction();\r\n    }\r\n\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (!(nextState.tag==null)) {\r\n            console.log(nextState);\r\n            const url = `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=67fa847a53bdc09b2db5c74c43d44b39&tags=${nextState.tag}&sort=interestingness-desc&content_type=1&per_page=20&format=json&nojsoncallback=1`;\r\n            fetch(url).then(r => r.json()).then(resp => this.setState({photos: resp.photos.photo}));\r\n            // this.hoverEffectFunction();\r\n            console.log(url);\r\n            this.setState({tag: null});\r\n            this.setState({hasUpdated: true});\r\n            this.setState({pageNo: 2});\r\n        }\r\n\r\n    }\r\n\r\n// handling loading more photos\r\n    handleLoadMore = () => {\r\n        // counter specifing which page of the results will be displayed\r\n        let counter = this.state.pageNo;\r\n        counter++;\r\n        this.setState({pageNo: counter});\r\n        console.log(this.state.pageNo);\r\n        let url = \"\";\r\n        if (this.state.hasUpdated == true) {\r\n            url = `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=67fa847a53bdc09b2db5c74c43d44b39&tags=${this.state.currentTag}&sort=interestingness-desc&content_type=1&per_page=20&page=${this.state.pageNo}&format=json&nojsoncallback=1`\r\n        } else {\r\n            url = `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=67fa847a53bdc09b2db5c74c43d44b39&tags=${this.props.type}&sort=interestingness-desc&content_type=1&per_page=20&page=${this.state.pageNo}&format=json&nojsoncallback=1`\r\n        }\r\n           fetch(url).then(r=>r.json()).then(resp=> {\r\n            console.log(url);\r\n            let photosOnLoad = resp.photos.photo;\r\n            let photosLoadedPreviously = this.state.photos;\r\n            let newPhotosState = photosLoadedPreviously.concat(photosOnLoad);\r\n            console.log(newPhotosState);\r\n            this.setState({photos: newPhotosState})}\r\n        );\r\n    };\r\n// main Hero hover effect\r\n    hoverEffectFunction = () => {\r\n        let myAnimation = new hoverEffect({\r\n            parent: document.querySelector('.my-div'),\r\n            intensity: 0.3,\r\n            image1: image3,\r\n            // image1: 'https://upload.wikimedia.org/wikipedia/commons/3/30/Echo_Park_Lake_with_Downtown_Los_Angeles_Skyline.jpg',\r\n            image2: image2,\r\n            // image2: 'https://images.unsplash.com/photo-1440330033336-7dcff4630cef?ixlib=rb-1.2.1&auto=format&fit=crop&w=1342&q=80',\r\n            displacementImage: image1,\r\n            // displacementImage: 'https://cdn.rawgit.com/robin-dela/hover-effect/b6c6fd26/images/stripe1mul.png?raw=true',\r\n            // hover: false,\r\n            // next: 1\r\n            speedIn: 5\r\n        });\r\n    };\r\n\r\n// form handlers\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({tag: this.state.value});\r\n        this.setState({currentTag: this.state.value});\r\n        // this.setState({hasUpdated: true});\r\n        setTimeout(() => {\r\n            console.log(this.state.tag);\r\n        },1000);\r\n        // this.setState({hasUpdated: false});\r\n\r\n\r\n    }\r\n\r\n// render function\r\n    render() {\r\n        const images = this.state.photos.map( (el,i) => {\r\n            return <Picture key={i}\r\n                            farm={el.farm}\r\n                            server={el.server}\r\n                            id={el.id}\r\n                            secret={el.secret}\r\n                            openImage={this.openImage}/>\r\n        });\r\n        return (<>\r\n\r\n            <header>\r\n                <div className=\"header__menuWrapper\">\r\n                    <div className=\"header__innerWrapper\">\r\n                        <h1>\r\n                            fetching photos from <a href=\"https://www.flickr.com/services/api/\" target=\"_blank\" className=\"header__link header__link--flickr\"><i>flickr API</i></a>\r\n                            <img src={flickrIcon} className=\"fi-flickr\"/>\r\n                        </h1>\r\n\r\n                        <a href=\"https://rafake.github.io/\" target=\"_blank\" className=\"header__link\">visit <i>rafake.github.io</i></a>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <div className=\"hero__wrapper\">\r\n                <div className=\"hero__insideWrapper\">\r\n                    <div className=\"my-div\"></div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <main className=\"gallery__outerWrapper\">\r\n\r\n            <section className=\"gallery__innerWrapper\">\r\n\r\n                {/*input form section - submitting tags*/}\r\n                <form onSubmit={this.handleSubmit} className=\"gallery__form\">\r\n                    <label className=\"gallery__label\">\r\n                        Enter the keyword\r\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChange} className=\"gallery__inputField\"/>\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Enter\" className=\"gallery__inputButton\"/>\r\n                </form>\r\n\r\n                {/*gallery section - displaying photos*/}\r\n\r\n                <div className=\"gallery\">\r\n\r\n                <ul>\r\n                {images}\r\n                {/*</Masonry>*/}\r\n                </ul>\r\n                </div>\r\n                {\r\n                    this.state.isOpen && <ModalPicture author={this.state.author} path={this.state.path} description={this.state.description} onClickClose={this.onClickClose} className=\"modalInvisible\"/>\r\n                }\r\n            </section>\r\n\r\n            </main>\r\n                <footer>\r\n                    <button className=\"footer__loadMore\" onClick={this.handleLoadMore}>Load more</button>\r\n                </footer>\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Gallery from \"./components/gallery\";\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      thingSearch: \"hej\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n        <Gallery type=\"sailing\"/*{this.state.thingSearch} onClickButtonChoice={this.handleOnClickButtonChoice}*/ />\r\n        </>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}